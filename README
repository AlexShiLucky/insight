		insight: the gdb tcl/tk graphic interface
		-----------------------------------------

The GUI part of insight is now maintained outside the gdb tree. Bundles are
therefore needed to get the whole code embedded. They are implemented as:

- bfd, opcodes, texinfo, readline, libiberty, include, sim, cpu, intl and
  libdecnumber are now bundles of binutils-gdb.

- libgui does not appear in any other repository and thus is now part of
  insight.

- binutils-gdb, tcl, tk, itcl, itk are included as git submodules.

- iwidgets is no longer part of itk project and is not kept in a git
  repository. The current snapshot has been obtained on 2014/06/25 with:

	fossil clone http://chiselapp.com/user/rene/repository/iwidgets	\
		iwidgets.fossil
	mkdir iwidgets
	cd iwidgets
	fossil open ../iwidgets.fossil


Cloning:
  After a simple clone, submodules have to be initialized and downloaded. This
is done as:
	git clone <url>
	cd insight.git
	git submodule init
	git submodule update

Alternatively, initial cloning can be performed as:
	git clone --recursive <url>

Updating:
  For automatic submodule pulls upon main module pull, set

	git config fetch.recurseSubmodules true

else use

	git submodule foreach --recursive git pull

when submodule pulls are required. In any case, finish update by

	git submodule update --remote


Building:
- Prepare the configuration scripts with:
autoconf

- Configure the package with the needed options. In example:
./configure	--prefix=/usr/.						\
		--enable-sim						\
		--disable-rpath						\
		--with-gdb-datadir=/usr/share/insight			\
		--with-jit-reader-dir=/usr/lib64/insight		\
		--with-separate-debug-dir='/usr/lib/debug'		\
		--with-expat						\
		--with-python=yes					\
		--without-libunwind

  Some new configuration options have been provided to ease use of
  system-installed submodules:
    --disable-bundled-xxx
  where xxx can be tcl, tk, itcl, itk or iwidgets.

  The configure script builds the "bundle" directory where the rest of
  the build will be performed.

- run make: the top Makefile is only a stub recursively making in the
  "bundle" directory.


To produce a source release tarball:
- Start from a FRESH recursive clone. Work in its top directory.
- autoconf
- configure
- (cd bundle; ./src-release.sh [-b|-g|-x] insight)
  -b, -g and -x compress the tarball with bzip2, gzip and xz respectively.
Tarball is left in file bundle/insight-VE.RS.ION.DATE.tar[.suffix]
